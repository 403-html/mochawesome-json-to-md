{
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 3,
    "pending": 1,
    "failures": 3,
    "start": "2021-07-06T17:23:52.882Z",
    "end": "2021-07-06T17:24:05.163Z",
    "duration": 1894,
    "testsRegistered": 7,
    "passPercent": 42.857142857142854,
    "pendingPercent": 14.285714285714286,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "237281bc-aa4e-40b5-93f4-5e4b5bec523e",
      "title": "",
      "fullFile": "cypress/integration/[T01] Outside Tests/updateFixture.spec.js",
      "file": "cypress/integration/[T01] Outside Tests/updateFixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89bc1e22-ab4d-4ddb-b2eb-71494ae5382e",
          "title": "Fixture update",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.updateFixtureProperty(updateFixture, \"name\", newName);\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {},
              "uuid": "98eff56e-020d-4de3-8a6a-f9d6a2c0a419",
              "parentUUID": "89bc1e22-ab4d-4ddb-b2eb-71494ae5382e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98eff56e-020d-4de3-8a6a-f9d6a2c0a419"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eb77b4dd-2ebc-4775-9611-fe9d620680d9",
      "title": "",
      "fullFile": "cypress/integration/[T02] Local Tests/removeFixture.spec.js",
      "file": "cypress/integration/[T02] Local Tests/removeFixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34b43c0d-e5fa-4c78-8a90-d20ddafaaebf",
          "title": "Fixture update",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 521,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {
                "message": "AssertionError: expected 'John' to deeply equal 'Max'",
                "estack": "AssertionError: expected 'John' to deeply equal 'Max'\n    at Context.eval (http://localhost:52136/__cypress/tests?p=cypress\\integration\\[T02]%20Local%20Tests\\removeFixture.spec.js:115:39)",
                "diff": "- 'John'\n+ 'Max'\n"
              },
              "uuid": "b413cfc3-fe34-47bc-8060-3f0116ea66b1",
              "parentUUID": "34b43c0d-e5fa-4c78-8a90-d20ddafaaebf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.updateFixtureProperty(updateFixture, \"name\", newName);\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {},
              "uuid": "507f8700-e762-43ae-a5fe-6d99065aa564",
              "parentUUID": "34b43c0d-e5fa-4c78-8a90-d20ddafaaebf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "507f8700-e762-43ae-a5fe-6d99065aa564"
          ],
          "failures": [
            "b413cfc3-fe34-47bc-8060-3f0116ea66b1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 604,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da012622-3d23-41bf-ada6-4b8f670fdb32",
      "title": "",
      "fullFile": "cypress/integration/[T02] Local Tests/updateFixture.spec.js",
      "file": "cypress/integration/[T02] Local Tests/updateFixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "98b615e2-db83-47fa-9361-8c5ca1e12cb0",
          "title": "Fixture update",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.updateFixtureProperty(updateFixture, \"name\", newName);\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {},
              "uuid": "408c7777-acd3-42af-a894-d62f24dff0a1",
              "parentUUID": "98b615e2-db83-47fa-9361-8c5ca1e12cb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "408c7777-acd3-42af-a894-d62f24dff0a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c2fd6a10-e025-4972-9a91-e42d61fbafbc",
      "title": "",
      "fullFile": "cypress/integration/[T01] Outside Tests/removeFixture.spec.js",
      "file": "cypress/integration/[T01] Outside Tests/removeFixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84023501-0419-4e65-8a30-eb58a23221f1",
          "title": "Fixture update",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {
                "message": "AssertionError: expected 'John' to deeply equal 'Max'",
                "estack": "AssertionError: expected 'John' to deeply equal 'Max'\n    at Context.eval (http://localhost:52136/__cypress/tests?p=cypress\\integration\\[T01]%20Outside%20Tests\\removeFixture.spec.js:115:39)",
                "diff": "- 'John'\n+ 'Max'\n"
              },
              "uuid": "cd4c9ab2-ce45-44c2-b098-186a07ac5147",
              "parentUUID": "84023501-0419-4e65-8a30-eb58a23221f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 494,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {
                "message": "AssertionError: expected 'John' to deeply equal 'Max'",
                "estack": "AssertionError: expected 'John' to deeply equal 'Max'\n    at Context.eval (http://localhost:52136/__cypress/tests?p=cypress\\integration\\[T01]%20Outside%20Tests\\removeFixture.spec.js:121:39)",
                "diff": "- 'John'\n+ 'Max'\n"
              },
              "uuid": "724980ba-36f1-4a5a-8e78-9feb52865e34",
              "parentUUID": "84023501-0419-4e65-8a30-eb58a23221f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "88bf0b1e-63b7-4c4b-bca6-d9fbf1512b21",
              "parentUUID": "84023501-0419-4e65-8a30-eb58a23221f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cd4c9ab2-ce45-44c2-b098-186a07ac5147",
            "724980ba-36f1-4a5a-8e78-9feb52865e34"
          ],
          "pending": [
            "88bf0b1e-63b7-4c4b-bca6-d9fbf1512b21"
          ],
          "skipped": [],
          "duration": 1005,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}