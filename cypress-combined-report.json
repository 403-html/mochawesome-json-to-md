{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 3,
    "pending": 1,
    "failures": 1,
    "start": "2021-07-09T13:08:44.395Z",
    "end": "2021-07-09T13:08:59.468Z",
    "duration": 3892,
    "testsRegistered": 5,
    "passPercent": 60,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36ce384d-7c02-4bea-8c36-596499cf941c",
      "title": "",
      "fullFile": "cypress/integration/[T01] Cypress Sink/[T01-01]get.spec.js",
      "file": "cypress/integration/[T01] Cypress Sink/[T01-01]get.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3f79456-c5af-48a1-93a6-edc60741c1e9",
          "title": "Checking GET method page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sample GET button is visible",
              "fullTitle": "Checking GET method page Sample GET button is visible",
              "timedOut": null,
              "duration": 708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "queryingPage.selectSampleButton().then(button => {\n  (0, _assertions.checkAmountOfElements)(button, 1);\n  (0, _assertions.checkVisiblity)(button);\n  (0, _assertions.checkInnerText)(button, \"Button\");\n});",
              "err": {},
              "uuid": "c6e6dc99-704d-44ce-b9cb-e1acd22dee4e",
              "parentUUID": "a3f79456-c5af-48a1-93a6-edc60741c1e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6e6dc99-704d-44ce-b9cb-e1acd22dee4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 708,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a41e9dc0-557b-43f8-b326-09c2b9004dbe",
      "title": "",
      "fullFile": "cypress/integration/[T01] Cypress Sink/[T01-02]input.spec.js",
      "file": "cypress/integration/[T01] Cypress Sink/[T01-02]input.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b50b7d5-65db-457d-b34c-0dd4ab5abd21",
          "title": "Checking fixture method",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sample input type",
              "fullTitle": "Checking fixture method Sample input type",
              "timedOut": null,
              "duration": 2048,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#fullName1\").type(\"lolololo\").invoke(\"val\").then(val => inputValue = val);\ncy.get(\"#description\").type(inputValue);",
              "err": {
                "message": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type",
                "estack": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type\n    at Context.type (https://example.cypress.io/__cypress/runner/cypress_runner.js:134697:17)\n    at Context.<anonymous> (https://example.cypress.io/__cypress/runner/cypress_runner.js:151764:21)\nFrom Your Spec Code:\n    at checkVisiblity (https://example.cypress.io/__cypress/tests?p=cypress/integration/[T01]%20Cypress%20Sink/[T01-02]input.spec.js:281:14)\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/[T01]%20Cypress%20Sink/[T01-02]input.spec.js:168:38)",
                "diff": null
              },
              "uuid": "41938e4a-a3cd-49cc-ac87-e15e61f8bfe1",
              "parentUUID": "8b50b7d5-65db-457d-b34c-0dd4ab5abd21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sample input type",
              "fullTitle": "Checking fixture method Sample input type",
              "timedOut": null,
              "duration": 955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#fullName1\").type(\"lolololo\").invoke(\"val\").then(val => inputValue = val);\ncy.get(\"#description\").type(inputValue);",
              "err": {},
              "uuid": "fd5b2dec-bb69-4e4c-be2b-593e0efea175",
              "parentUUID": "8b50b7d5-65db-457d-b34c-0dd4ab5abd21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sample input type",
              "fullTitle": "Checking fixture method Sample input type",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b3969ea1-d9b8-4c54-a3c6-93ad01d28eed",
              "parentUUID": "8b50b7d5-65db-457d-b34c-0dd4ab5abd21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd5b2dec-bb69-4e4c-be2b-593e0efea175"
          ],
          "failures": [
            "41938e4a-a3cd-49cc-ac87-e15e61f8bfe1"
          ],
          "pending": [
            "b3969ea1-d9b8-4c54-a3c6-93ad01d28eed"
          ],
          "skipped": [],
          "duration": 3003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1307cc67-dd18-4873-9d3d-fc44a0956a6c",
      "title": "",
      "fullFile": "cypress/integration/[T02] Local Tests/updateFixture.spec.js",
      "file": "cypress/integration/[T02] Local Tests/updateFixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "afe315ca-cb4d-4d62-901c-33d5f5e5e7f9",
          "title": "Fixture update",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fixture name should be updated from John to other name",
              "fullTitle": "Fixture update Fixture name should be updated from John to other name",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newName = \"Max\";\ncy.updateFixtureProperty(updateFixture, \"name\", newName);\ncy.readFile(updateFixturePath).then(fixture => {\n  expect(fixture.name).to.be.deep.equal(newName);\n});",
              "err": {},
              "uuid": "8af4f127-f449-4a05-ae3f-c6e43bc2c130",
              "parentUUID": "afe315ca-cb4d-4d62-901c-33d5f5e5e7f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8af4f127-f449-4a05-ae3f-c6e43bc2c130"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 181,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}